var searchIndex = JSON.parse('{\
"gear_lib":{"doc":"","t":"AAAAAAILLLLLDDMMLLLLLLLLLLLLLLLLLLLLLLMMLLMMLLLLLLLLLLNNNNIEEDINNNNNNMMLLLLLLMLLLLLLLLLLLLLLLLLKKLLLMLMLLMLLLLLLLLLLLMAAANNDDENDGDNMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMILLLLLLLLLLLLNNEEDINNNNNNINNNNNNNNNNNNMMMLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLMLMLLLMLLMLLLLLLLLLLLLLAAAAAADMLLLLLLLLLMLLLMLLMMLLLLDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMMMMLLLLLLMMMLLLLLLLLLLLLILLLLLLLLLLLLLLLGDLLLLLLLLLLLLLLLLLLLLNNNNNNIEEDINNNNNNNNLLMLLLLLLLLLLLLLLLLLLLLLLLKKLLLMMLMLMLLLMMLMLLLLLLLLLLLLMMMMMMMMMMMMMDGDMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMLLMMMMMLMMLLLLLLLLLLL","n":["fungible_token","multitoken","non_fungible_token","ft_core","io","state","FTCore","approve","burn","can_transfer","mint","transfer","FTApproval","FTTransfer","amount","amount","borrow","borrow","borrow_mut","borrow_mut","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","into","into","to","to","to_keyed_vec","to_keyed_vec","try_from","try_from","try_into","try_into","type_id","type_id","type_info","type_info","BalanceOf","BalanceOf","Decimals","Decimals","FTMetaState","FTQuery","FTQueryReply","FTState","FTStateKeeper","Name","Name","Symbol","Symbol","TotalSupply","TotalSupply","allowances","balances","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decimals","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","encode_to","encode_to","fmt","fmt","fmt","from","from","from","get","get_mut","into","into","into","name","proc_state","symbol","to_keyed_vec","to_keyed_vec","total_supply","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_info","account","io","mtk_core","state","Approval","BalanceOf","BalanceReply","InitConfig","MTKEvent","RevokeApproval","Token","TokenId","TokenMetadata","Transfer","account","amount","amount","base_uri","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","description","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","id","into","into","into","into","into","media","metadata","name","reference","symbol","title","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","amounts","from","from","from","ids","operator","to","to","to","MTKCore","approve","assert_approved","assert_can_burn","assert_can_transfer","balance_of","burn","burn_impl","mint","mint_impl","revoke_approval","transfer_from","transfer_from_impl","Balance","BalanceOf","MTKQuery","MTKQueryReply","MTKState","MTKTokenState","MetadataOf","MetadataOf","Name","Name","OwnerOf","OwnerOf","StateKeeper","Supply","Supply","Symbol","Symbol","TokensForOwner","TokensForOwner","TokensIDsForOwner","TokensIDsForOwner","URI","URI","Uri","Uri","approvals","balances","base_uri","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","encode_to","encode_to","fmt","fmt","fmt","from","from","from","get","get_balance","get_metadata","get_mut","get_uri","into","into","into","name","owner_of","owners","proc_state","set_balance","supply","symbol","to_keyed_vec","to_keyed_vec","token_metadata","tokens_for_owner","tokens_ids_for_owner","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_info","delegated","io","nft_core","royalties","state","token","DelegatedApproveMessage","approved_actor_id","borrow","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode_to","expiration_timestamp","fmt","from","into","nft_program_id","to_keyed_vec","to_owned","token_id","token_owner_id","try_from","try_into","type_id","type_info","NFTApproval","NFTTransfer","NFTTransferPayout","approved_account","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","into","into","into","owner","payouts","to","to","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","token_id","token_id","token_id","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_info","type_info","NFTCore","approve","assert_can_transfer","assert_owner","assert_token_exists","assert_zero_address","burn","delegated_approve","internal_transfer","is_approved_to","mint","nft_payout","owner_of","revoke_approval","transfer","transfer_payout","Payout","Royalties","borrow","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode_to","fmt","from","into","payouts","to_keyed_vec","to_owned","try_from","try_into","type_id","type_info","validate","AllTokens","AllTokens","ApprovedTokens","ApprovedTokens","NFTInfo","NFTInfo","NFTMetaState","NFTQuery","NFTQueryReply","NFTState","NFTStateKeeper","SupplyForOwner","SupplyForOwner","Token","Token","TokensForOwner","TokensForOwner","TotalSupply","TotalSupply","all_tokens","approved_tokens","base_uri","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","encode_to","encode_to","fmt","fmt","fmt","from","from","from","get","get_mut","into","into","into","name","owner_by_id","proc_state","royalties","supply_for_owner","symbol","to_keyed_vec","to_keyed_vec","token","token_approvals","token_metadata_by_id","tokens_for_owner","tokens_for_owner","total_supply","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_info","account","owner","owner","token_id","base_uri","name","supply","symbol","token","tokens","tokens","tokens","total_supply","Token","TokenId","TokenMetadata","approved_account_ids","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","description","description","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","from","from","id","into","into","media","media","name","name","owner_id","partial_cmp","reference","reference","to_keyed_vec","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_info","type_info"],"q":[[0,"gear_lib"],[3,"gear_lib::fungible_token"],[6,"gear_lib::fungible_token::ft_core"],[12,"gear_lib::fungible_token::io"],[54,"gear_lib::fungible_token::state"],[117,"gear_lib::fungible_token::state::FTQuery"],[118,"gear_lib::multitoken"],[121,"gear_lib::multitoken::io"],[233,"gear_lib::multitoken::io::MTKEvent"],[242,"gear_lib::multitoken::mtk_core"],[255,"gear_lib::multitoken::state"],[337,"gear_lib::non_fungible_token"],[343,"gear_lib::non_fungible_token::delegated"],[367,"gear_lib::non_fungible_token::io"],[440,"gear_lib::non_fungible_token::nft_core"],[456,"gear_lib::non_fungible_token::royalties"],[478,"gear_lib::non_fungible_token::state"],[553,"gear_lib::non_fungible_token::state::NFTQuery"],[557,"gear_lib::non_fungible_token::state::NFTQueryReply"],[566,"gear_lib::non_fungible_token::token"]],"d":["","","","","","","","Gives a right to another account to manage the <code>amount</code> of …","Burns <code>amount</code> of token","Checks whether it is possible to perform a transfer","Mints <code>amount</code> of token","Transfer <code>amount</code> of token","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Token holders allowance to manipulate token amounts.","Token holders balances.","","","","","","","Token’s decimals.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Token name.","","Token symbol.","","","Token’s total supply.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gives a right to another account to manage its tokens …","","","","Returns the amount of multiple specific tokens multiple …","Burns multiple tokens (in case all input length is 1 - …","","Mints multiple new tokens (in case all input length is 1 - …","","Removed a right to another account to manage its tokens …","Transfers multiple tokens to a new user (in case all input …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Gives a right to another account to manage the token with …","Checks that <code>msg::source()</code> is allowed to manage the token …","Checks that <code>msg::source()</code> is the owner of the token with …","Checks that NFT with indicated ID already exists","Checks account for a zero address","Burns a token","","","","Mints a new token","Returns a <code>Payout</code> struct for a given token If NFT contract …","","","Transfers a token to the new owner","Transfers a token to the new owner","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,46,46,46,46,46,0,0,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,19,20,19,20,0,0,0,0,0,19,20,19,20,19,20,21,21,21,19,20,21,19,20,21,19,20,19,20,19,20,19,20,21,19,20,21,19,20,21,19,20,47,47,21,19,20,21,48,21,19,20,21,21,19,20,21,19,20,21,19,20,19,20,49,0,0,0,27,27,0,0,0,27,0,0,0,27,26,24,26,25,23,24,25,26,27,23,24,25,26,27,23,24,23,24,23,24,25,26,27,23,24,25,26,27,23,24,25,26,27,23,24,25,26,27,23,24,23,23,24,25,26,27,23,24,26,23,24,26,23,24,25,26,27,23,24,25,26,27,24,26,23,24,25,26,27,23,24,25,23,25,23,23,24,25,26,27,23,24,23,24,25,26,27,23,24,25,26,27,23,24,25,26,27,23,24,25,26,27,50,50,51,52,50,50,50,51,52,0,53,53,53,53,53,53,53,53,53,53,53,53,30,29,0,0,0,0,29,30,29,30,29,30,0,29,30,29,30,29,30,29,30,29,30,29,30,31,31,31,31,29,30,31,29,30,29,30,29,30,29,30,29,30,31,29,30,31,29,30,31,29,30,54,55,55,54,55,31,29,30,31,55,31,55,55,55,31,29,30,31,55,55,31,29,30,31,29,30,31,29,30,29,30,0,0,0,0,0,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,0,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,34,35,36,36,35,34,35,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,42,43,42,43,42,43,0,0,0,0,0,42,43,42,43,42,43,42,43,57,57,44,44,42,43,44,42,43,42,43,42,43,42,43,42,43,44,42,43,44,42,43,44,42,43,58,58,44,42,43,44,44,57,44,57,44,42,43,57,44,44,57,44,57,44,42,43,44,42,43,44,42,43,42,43,59,60,61,62,63,63,64,63,65,66,67,68,69,0,0,0,41,41,38,41,38,38,38,38,41,38,41,38,41,38,41,38,41,38,41,38,41,38,41,38,41,38,41,38,41,38,41,41,38,41,38,41,38,41,38,41,38,41,38,38,41,38,41,38,41,38,41,38],"f":[0,0,0,0,0,0,0,[[1,2]],[2],[[1,2],3],[[1,2]],[[1,1,2]],0,0,0,0,[[]],[[]],[[]],[[]],[4,[[7,[5,6]]]],[4,[[7,[8,6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[9,[[7,[6]]]],[9,[[7,[6]]]],[[9,4],[[7,[6]]]],[[9,4],[[7,[6]]]],[[5,[0,[10,11]]]],[[8,[0,[10,11]]]],[[5,5],3],[[8,8],3],[[],3],[[],3],[[5,12],13],[[8,12],13],[[]],[[]],0,0,[[]],[[]],0,0,[[],[[16,[14,15]]]],[[],[[16,[14,15]]]],[[],7],[[],7],[[],7],[[],7],[[],17],[[],17],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[4,[[7,[19,6]]]],[4,[[7,[20,6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[9,[[7,[6]]]],[9,[[7,[6]]]],[[9,4],[[7,[6]]]],[[9,4],[[7,[6]]]],[[],21],[[19,[0,[10,11]]]],[[20,[0,[10,11]]]],[[21,12],13],[[19,12],13],[[20,12],13],[[]],[[]],[[]],[[],21],[[],21],[[]],[[]],[[]],0,[19,[[22,[[16,[14]]]]]],0,[[],[[16,[14,15]]]],[[],[[16,[14,15]]]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],17],[[],17],[[],17],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,23],[24,24],[[]],[[]],[4,[[7,[23,6]]]],[4,[[7,[24,6]]]],[4,[[7,[25,6]]]],[4,[[7,[26,6]]]],[4,[[7,[27,6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[9,[[7,[6]]]],[9,[[7,[6]]]],[9,[[7,[6]]]],[9,[[7,[6]]]],[9,[[7,[6]]]],[[9,4],[[7,[6]]]],[[9,4],[[7,[6]]]],[[9,4],[[7,[6]]]],[[9,4],[[7,[6]]]],[[9,4],[[7,[6]]]],[[],23],[[],24],0,[[23,[0,[10,11]]]],[[24,[0,[10,11]]]],[[25,[0,[10,11]]]],[[26,[0,[10,11]]]],[[27,[0,[10,11]]]],[[23,23],3],[[24,24],3],[[26,26],3],[[],3],[[],3],[[],3],[[23,12],13],[[24,12],13],[[25,12],13],[[26,12],13],[[27,12],13],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],[[16,[14,15]]]],[[],[[16,[14,15]]]],[[],[[16,[14,15]]]],[[],[[16,[14,15]]]],[[],[[16,[14,15]]]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,[1],[[1,1]],[[1,28,2]],[[1,2,2]],[[[16,[1]],[16,[28]]]],[[[16,[28]],[16,[2]]]],[[28,2]],[[1,[16,[28]],[16,[2]],[16,[[22,[23]]]]]],[[1,28,2,[22,[23]]]],[1],[[1,1,[16,[28]],[16,[2]]]],[[1,1,28,2]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[4,[[7,[29,6]]]],[4,[[7,[30,6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[9,[[7,[6]]]],[9,[[7,[6]]]],[[9,4],[[7,[6]]]],[[9,4],[[7,[6]]]],[[],31],[[29,[0,[10,11]]]],[[30,[0,[10,11]]]],[[31,12],13],[[29,12],13],[[30,12],13],[[]],[[]],[[]],[[],31],[[1,28],2],[28,23],[[],31],[28,32],[[]],[[]],[[]],0,[28,1],0,[29,[[22,[[16,[14]]]]]],[[1,28,2]],[28,2],0,[[],[[16,[14,15]]]],[[],[[16,[14,15]]]],0,[1,[[16,[24]]]],[1,[[16,[28]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],17],[[],17],[[],17],[[],18],[[],18],0,0,0,0,0,0,0,0,[[]],[[]],[33,33],[[]],[4,[[7,[33,6]]]],[[],[[7,[6]]]],[9,[[7,[6]]]],[[9,4],[[7,[6]]]],[[33,[0,[10,11]]]],0,[[33,12],13],[[]],[[]],0,[[],[[16,[14,15]]]],[[]],0,0,[[],7],[[],7],[[],17],[[],18],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[35,35],[36,36],[[]],[[]],[[]],[4,[[7,[34,6]]]],[4,[[7,[35,6]]]],[4,[[7,[36,6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[9,[[7,[6]]]],[9,[[7,[6]]]],[9,[[7,[6]]]],[[9,4],[[7,[6]]]],[[9,4],[[7,[6]]]],[[9,4],[[7,[6]]]],[[34,[0,[10,11]]]],[[35,[0,[10,11]]]],[[36,[0,[10,11]]]],[[34,34],3],[[35,35],3],[[36,36],3],[[],3],[[],3],[[],3],[[34,12],13],[[35,12],13],[[36,12],13],[[]],[[]],[[]],0,0,[[]],[[]],[[]],0,0,0,0,[[],[[16,[14,15]]]],[[],[[16,[14,15]]]],[[],[[16,[14,15]]]],[[]],[[]],[[]],0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],0,[[1,37],36],[[37,1]],[1],[37],[1],[37,34],[33,36],[[1,37],1],[[1,37],3],[[1,37,[22,[38]]],34],[[1,2],39],[37,1],[[1,37],36],[[1,37],34],[[1,37,2],35],0,0,[[]],[[]],[40,40],[[]],[4,[[7,[40,6]]]],[[],[[7,[6]]]],[9,[[7,[6]]]],[[9,4],[[7,[6]]]],[[40,[0,[10,11]]]],[[40,12],13],[[]],[[]],[[40,1,2],39],[[],[[16,[14,15]]]],[[]],[[],7],[[],7],[[],17],[[],18],[40],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[16,[41]]]],[1,[[16,[41]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[4,[[7,[42,6]]]],[4,[[7,[43,6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[9,[[7,[6]]]],[9,[[7,[6]]]],[[9,4],[[7,[6]]]],[[9,4],[[7,[6]]]],[[],44],[[42,[0,[10,11]]]],[[43,[0,[10,11]]]],[[44,12],13],[[42,12],13],[[43,12],13],[[]],[[]],[[]],[[],44],[[],44],[[]],[[]],[[]],0,0,[42,[[22,[[16,[14]]]]]],0,[1,2],0,[[],[[16,[14,15]]]],[[],[[16,[14,15]]]],[37,41],0,0,[1,[[16,[41]]]],0,[[],2],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],17],[[],17],[[],17],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[38,38],[[]],[[38,38],45],[4,[[7,[41,6]]]],[4,[[7,[38,6]]]],[[],[[7,[6]]]],[[],[[7,[6]]]],[9,[[7,[6]]]],[9,[[7,[6]]]],[[9,4],[[7,[6]]]],[[9,4],[[7,[6]]]],[[],41],[[],38],0,0,[[41,[0,[10,11]]]],[[38,[0,[10,11]]]],[[41,41],3],[[38,38],3],[[],3],[[],3],[[41,12],13],[[38,12],13],[[]],[[]],0,[[]],[[]],0,0,0,0,0,[[38,38],[[22,[45]]]],0,0,[[],[[16,[14,15]]]],[[],[[16,[14,15]]]],[[]],[[],7],[[],7],[[],7],[[],7],[[],17],[[],17],[[],18],[[],18]],"c":[],"p":[[3,"ActorId"],[15,"u128"],[15,"bool"],[8,"Input"],[3,"FTTransfer"],[3,"Error"],[4,"Result"],[3,"FTApproval"],[15,"u32"],[8,"Output"],[8,"Sized"],[3,"Formatter"],[6,"Result"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"TypeId"],[3,"Type"],[4,"FTQuery"],[4,"FTQueryReply"],[3,"FTState"],[4,"Option"],[3,"TokenMetadata"],[3,"Token"],[3,"InitConfig"],[3,"BalanceReply"],[4,"MTKEvent"],[6,"TokenId"],[4,"MTKQuery"],[4,"MTKQueryReply"],[3,"MTKState"],[3,"String"],[3,"DelegatedApproveMessage"],[3,"NFTTransfer"],[3,"NFTTransferPayout"],[3,"NFTApproval"],[6,"TokenId"],[3,"TokenMetadata"],[6,"Payout"],[3,"Royalties"],[3,"Token"],[4,"NFTQuery"],[4,"NFTQueryReply"],[3,"NFTState"],[4,"Ordering"],[8,"FTCore"],[8,"FTStateKeeper"],[8,"FTMetaState"],[13,"BalanceOf"],[13,"Transfer"],[13,"Approval"],[13,"RevokeApproval"],[8,"MTKCore"],[8,"StateKeeper"],[8,"MTKTokenState"],[8,"NFTCore"],[8,"NFTMetaState"],[8,"NFTStateKeeper"],[13,"ApprovedTokens"],[13,"TokensForOwner"],[13,"SupplyForOwner"],[13,"Token"],[13,"NFTInfo"],[13,"SupplyForOwner"],[13,"Token"],[13,"TokensForOwner"],[13,"AllTokens"],[13,"ApprovedTokens"],[13,"TotalSupply"]]},\
"gear_lib_derive":{"doc":"","t":"YYYYYYYYY","n":["FTCore","FTMetaState","FTStateKeeper","MTKCore","MTKTokenState","NFTCore","NFTMetaState","NFTStateKeeper","StateKeeper"],"q":[[0,"gear_lib_derive"]],"d":["","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0],"c":[],"p":[]},\
"gear_lib_macros":{"doc":"","t":"OO","n":["declare_derive_storage_trait","declare_impl_trait"],"q":[[0,"gear_lib_macros"]],"d":["This <code>macro_rule</code> generates a procedural derive macro for …",""],"i":[0,0],"f":[0,0],"c":[],"p":[]},\
"gear_lib_sr25519":{"doc":"","t":"NNENLLLLLLLF","n":["BadPublicKey","BadSignature","Error","VerificationFailed","borrow","borrow_mut","from","into","try_from","try_into","type_id","verify"],"q":[[0,"gear_lib_sr25519"]],"d":["","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","",""],"i":[4,4,0,4,4,4,4,4,4,4,4,0],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[],1],[[],2],[[3,3],[[1,[4]]]]],"c":[],"p":[[4,"Result"],[3,"TypeId"],[8,"AsRef"],[4,"Error"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
